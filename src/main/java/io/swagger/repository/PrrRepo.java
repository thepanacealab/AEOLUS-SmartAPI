package io.swagger.repository;

import io.swagger.model.PRR;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;

public interface PrrRepo extends JpaRepository<PRR, Integer>{
    @Query(value = "SELECT 1 AS id, p.prr, p.case_count, p.prr_95_percent_upper_confidence_limit, p.prr_95_percent_lower_confidence_limit FROM faers.standard_drug_outcome_statistics p WHERE p.drug_concept_id = ?1 and p.outcome_concept_id = ?2",
            countQuery = "SELECT count(*) from standard.standard_drug_outcome_statistics p",
            nativeQuery = true)
    PRR getPRRByCode(int drugCode, int outcomeCode);

    @Query(value = "SELECT 1 AS id, a.prr, a.case_count, a.prr_95_percent_upper_confidence_limit, a.prr_95_percent_lower_confidence_limit FROM faers.standard_drug_outcome_statistics a where a.drug_concept_id IN (select distinct standard_concept_id from faers.standard_combined_drug_mapping where lookup_value = ?1) and a.outcome_concept_id IN (select distinct outcome_concept_id from faers.standard_case_outcome where pt = ?2)",
            countQuery = "SELECT count(*) from standard.standard_drug_outcome_statistics p",
            nativeQuery = true)
    PRR getPRRByName(String drugName, String outcomeName);

    @Query(value = "SELECT 1 AS id, count_a as case_count, round((count_a / (count_a + count_b)) / (count_c / (count_c + count_d)),5) as prr, round(exp(ln((count_a / (count_a + count_b)) / (count_c / (count_c + count_d)))+1.96*sqrt((1.0/count_a)-(1.0/(count_a+count_b))+(1.0/count_c)+(1.0/(count_c+count_d)))),5) as prr_95_percent_upper_confidence_limit, round(exp(ln((count_a / (count_a + count_b)) / (count_c / (count_c + count_d)))-1.96*sqrt((1.0/count_a)-(1.0/(count_a+count_b))+(1.0/count_c)+(1.0/(count_c+count_d)))),5) as prr_95_percent_lower_confidence_limit FROM (select 1 as id, (select count(*)*1.0 from faers.unique_all_casedemo where drugname_list IN (select distinct lookup_value from faers.standard_combined_drug_mapping where standard_concept_id = ?1) and reac_pt_list IN (select distinct pt from faers.standard_case_outcome where outcome_concept_id = ?2) and fda_dt between cast(?3 as varchar) and cast(?4 as varchar)) as count_a, (select count(*)*1.0 from faers.unique_all_casedemo where drugname_list IN (select distinct lookup_value from faers.standard_combined_drug_mapping where standard_concept_id = ?1) and reac_pt_list NOT IN (select distinct pt from faers.standard_case_outcome where outcome_concept_id = ?2) and fda_dt between cast(?3 as varchar) and cast(?4 as varchar)) as count_b, (select count(*)*1.0 from faers.unique_all_casedemo where drugname_list NOT IN (select distinct lookup_value from faers.standard_combined_drug_mapping where standard_concept_id = ?1) and reac_pt_list IN (select distinct pt from faers.standard_case_outcome where outcome_concept_id = ?2) and fda_dt between cast(?3 as varchar) and cast(?4 as varchar)) as count_c, (select count(*)*1.0 from faers.unique_all_casedemo where drugname_list NOT IN (select distinct lookup_value from faers.standard_combined_drug_mapping where standard_concept_id = ?1)and reac_pt_list NOT IN (select DISTINCT pt from faers.standard_case_outcome where outcome_concept_id = ?2) and fda_dt between cast(?3 as varchar) and cast(?4 as varchar)) as count_d) p",
            countQuery = "SELECT count(*) from standard.standard_drug_outcome_statistics p",
            nativeQuery = true)
    PRR getPRRByDateCode(int drugCode, int outcomeCode, int startDate, int endDate);

    @Query(value = "SELECT 1 AS id, count_a as case_count, round((count_a / (count_a + count_b)) / (count_c / (count_c + count_d)),5) as prr, round(exp(ln((count_a / (count_a + count_b)) / (count_c / (count_c + count_d)))+1.96*sqrt((1.0/count_a)-(1.0/(count_a+count_b))+(1.0/count_c)+(1.0/(count_c+count_d)))),5) as prr_95_percent_upper_confidence_limit, round(exp(ln((count_a / (count_a + count_b)) / (count_c / (count_c + count_d)))-1.96*sqrt((1.0/count_a)-(1.0/(count_a+count_b))+(1.0/count_c)+(1.0/(count_c+count_d)))),5) as prr_95_percent_lower_confidence_limit FROM (select 1 as id, (select count(*)*1.0 from faers.unique_all_casedemo where drugname_list IN (select distinct lookup_value from faers.standard_combined_drug_mapping where standard_concept_id = (select distinct standard_concept_id from faers.standard_combined_drug_mapping where lookup_value = ?1)) and reac_pt_list = UPPER(?2) and fda_dt between cast(?3 as varchar) and cast(?4 as varchar)) as count_a, (select count(*)*1.0 from faers.unique_all_casedemo where drugname_list IN (select distinct lookup_value from faers.standard_combined_drug_mapping where standard_concept_id = (select distinct standard_concept_id from faers.standard_combined_drug_mapping where lookup_value = ?1)) and reac_pt_list <> UPPER(?2) and fda_dt between cast(?3 as varchar) and cast(?4 as varchar)) as count_b, (select count(*)*1.0 from faers.unique_all_casedemo where drugname_list NOT IN (select distinct lookup_value from faers.standard_combined_drug_mapping where standard_concept_id = (select distinct standard_concept_id from faers.standard_combined_drug_mapping where lookup_value = ?1)) and reac_pt_list = UPPER(?2) and fda_dt between cast(?3 as varchar) and cast(?4 as varchar)) as count_c, (select count(*)*1.0 from faers.unique_all_casedemo where drugname_list NOT IN (select distinct lookup_value from faers.standard_combined_drug_mapping where standard_concept_id = (select distinct standard_concept_id from faers.standard_combined_drug_mapping where lookup_value = ?1)) and reac_pt_list <> UPPER(?2) and fda_dt between cast(?3 as varchar) and cast(?4 as varchar)) as count_d) p", 
            countQuery = "SELECT count(*) from standard.standard_drug_outcome_statistics p",
            nativeQuery = true)
    PRR getPRRByDateName(String drugName, String outcomeName, int startDate, int endDate);
}

